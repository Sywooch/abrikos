<?php

namespace app\modules\miner\controllers;

use app\modules\miner\models\MineTable;
use yii\helpers\Json;
use yii\web\Controller;

class DefaultController extends Controller
{
	public function beforeAction($action)
	{
		return parent::beforeAction($action); // TODO: Change the autogenerated stub
	}

	public function actionIndex()
    {
        return $this->render('miner');
    }

	public function actionSvg()
	{
		return $this->render('miner-svg');
	}

	private function minerFieldCreate($row,$col){
		$session = \Yii::$app->session;
		$rows = $session['miner-field-params'][0];
		$cols = $session['miner-field-params'][1];
		$minesCount = $session['miner-field-params'][2];
		//print "$rows,$cols,$minesCount";exit;
		$table = new MineTable($rows,$cols,$minesCount,$row,$col);

		$mysess['table'] = $table;
		$mysess['start'] = time();
		$mysess['turn'] = 0;
		$mysess['gameover'] = 0;
		$mysess['cheater'] = [];// $table->getMines();
		//print_r($table->getCells());exit;
		$session->set('miner-session', $mysess);
		return $mysess;
	}


	public function actionWinner()
	{
		$session = \Yii::$app->session;
		$mysess = $session['miner-session'];
		if(!$mysess['winTime']){
			$ret['error'] = 'В розыгрыше приза участвуют только полностью разминированные поля';
		}else{
			$ret['data'] = ['turn'=>$mysess['turn'], 'time'=>$mysess['winTime'] - $mysess['start'], 'rate'=>$mysess['rate']];
			$phones = new Phones();
			$phones->phone = trim(\Yii::$app->request->post('phone'));
			$phones->game = 'Сапер';
			$phones->rate = $ret['data']['time'];
			$phones->winner = 0;
			$phones->start = $mysess['winTime'];
			try {
				if (!$phones->save()) {
					throw new HttpException(500, var_export($phones->getErrors(), 1));;
				}
			}catch(\Exception $e){
				throw new HttpException(500, 'Эта игра уже добавлена');;
			}
		}
		return Json::encode($ret);
	}

	public function actionNew($rows , $cols, $bombs)
	{
		$session = \Yii::$app->session;
		$session->set('miner-session', null);
		$session->set('miner-field-params',[$rows, $cols, $bombs]);
		return 'New mine table created';
	}

	public function actionCheck($row,$col)
	{
		$winner = ['time'=>0,'turn'=>0];
		$session = \Yii::$app->session;
		$mysess = $session['miner-session'];
		if(!is_array($mysess) ){ $mysess = $this->minerFieldCreate($row,$col); }
		$mysess['turn']++;
		$cell = $mysess['table']->findOne($row,$col);
		if($mysess['table']->isMine($row,$col)){
			$mysess['gameover'] = 1;
			$openCells = $mysess['table']->getMines();
		}elseif(!$mysess['gameover']) {
			$openCells = $mysess['table']->getOpen($row,$col);
			if($mysess['table']->isFinished()){
				$winner = ['time'=>time() - $mysess['start'],'turn'=>$mysess['turn']];
				/*
				$newWinner = new \common\models\Miner;
				$newWinner->player = $mysess['playerName'];
				$newWinner->turn = $mysess['turn'];
				$newWinner->time = $mysess['winTime'] - $mysess['start'];
				$newWinner->user =\Yii::$app->user->id*1;
				$newWinner->rows = $mysess['table']->rows;
				$newWinner->cols = $mysess['table']->cols;
				$newWinner->mines = $mysess['table']->mines;
				$newWinner->rate = $mysess['rate'] = $newWinner->rows * $newWinner->cols *$newWinner->mines /( $newWinner->turn * $newWinner->time );
				$newWinner->save();
				*/
			}
		}
		$session->set('miner-session',$mysess);
		$ret = [
			'cell'=>$cell,
			'cheater'=>$mysess['cheater'],
			'gameover'=>$mysess['gameover'],
			'opencells'=>$openCells,
			'winner'=>$winner,
		];
		return Json::encode($ret);
	}

	public function actionTable($from=0,$to=0, $registred = 0) {
		$query = Miner::find();
		$query->where('turn > 3 ');
		if($from){ $query->andWhere(' date >"' . $from .'"'); }
		if($to){ $query->andWhere(' date < "' . $to .'"'); }
		if($to){ $query->andWhere('rows=12 and cols=12 and mines=26'); }
		if($registred){ $query->andWhere(' user > 0 '); }
		$cows = $query->orderBy('rate desc, turn, time desc')->limit(50)->all();
		return \yii\helpers\Json::encode($cows);
	}

	public function actionResult($id) {
		$model = Miner::findOne($id);
		return $this->render('miner-result',['model'=>$model]);
	}
}
